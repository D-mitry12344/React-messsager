{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bityu\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\app\\\\fron\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gert, setGert] = useState([]);\n  let array = [];\n  let AllLists;\n  async function ger() {\n    const response = await fetch('http://localhost:5000');\n    const body = await response.json();\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n    return body;\n  }\n  //let ger = ger().then()\n\n  ger().then(() => {\n    ger = body;\n  }, () => {});\n  console.log(ger);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: AllLists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pb9u57KZV/wB7ujsjXU3TGNuKHo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","jsxDEV","_jsxDEV","App","_s","gert","setGert","array","AllLists","ger","response","fetch","body","json","status","Error","message","then","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bityu/OneDrive/Рабочий стол/app/fron/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\n\n\nfunction App() {\n   const[gert,setGert]= useState([]);\n   let array= []\n   let AllLists\n  async function ger(){\n        const response = await fetch('http://localhost:5000');\n        const body = await response.json();\n        if (response.status !== 200) {\n          throw Error(body.message)\n        }\n        \n        return body\n    }\n    //let ger = ger().then()\n    \nger().then(()=>{ger = body} , ()=>{})\nconsole.log(ger)\n  return (\n    <div >\n      <ul>{AllLists}</ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAK,CAACC,IAAI,EAACC,OAAO,CAAC,GAAEN,QAAQ,CAAC,EAAE,CAAC;EACjC,IAAIO,KAAK,GAAE,EAAE;EACb,IAAIC,QAAQ;EACb,eAAeC,GAAGA,CAAA,EAAE;IACd,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,CAAC;IACrD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,IAAIH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;MAC3B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC;IAC3B;IAEA,OAAOJ,IAAI;EACf;EACA;;EAEJH,GAAG,CAAC,CAAC,CAACQ,IAAI,CAAC,MAAI;IAACR,GAAG,GAAGG,IAAI;EAAA,CAAC,EAAG,MAAI,CAAC,CAAC,CAAC;EACrCM,OAAO,CAACC,GAAG,CAACV,GAAG,CAAC;EACd,oBACEP,OAAA;IAAAkB,QAAA,eACElB,OAAA;MAAAkB,QAAA,EAAKZ;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV;AAACpB,EAAA,CAtBQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}